package utilities;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class XLUtility {
	
	

	public static FileInputStream fi;
	public static  FileOutputStream fo;
	public static XSSFWorkbook workbook;
	public static XSSFSheet sheet;
	public static XSSFRow row;
	public static XSSFCell cell;
	public static CellStyle style;   
	String path;
	
	
	public XLUtility(String path)
	{
		this.path=path;
	}
	
		
	
	public  int getRowCount(String xlSheet) throws IOException
	{
		
		fi=new FileInputStream(path);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(xlSheet);
		int rowCount=sheet.getLastRowNum();
		workbook.close();
		fi.close();
		return rowCount;
	}

	
	public  int getCellCount(String xlSheet,int rowNum) throws IOException
	{
		fi=new FileInputStream(path);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(xlSheet);
		row=sheet.getRow(rowNum);
		int colCount=row.getLastCellNum();
		workbook.close();
		fi.close();
		return colCount;
		
	
	}
	
	public  String getCellData(String xlSheet,int rownum,int colnum) throws IOException
	{
		fi=new FileInputStream(path);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(xlSheet);
		row=sheet.getRow(rownum);
		cell=row.getCell(colnum);
		String data;
		try 
		{
	      DataFormatter formatter=new DataFormatter();
	      data=formatter.formatCellValue(cell);
		}
		catch(Exception e)
		{
			data="";
			
			//meaning no value in that cell so throwing an exception
		}
		
		workbook.close();
		fi.close();
		
		return data;
	}
	
	public  void  setCellData(String xlFile,String xlSheet,int rownum,int colnum,String data) throws IOException
	{
		
		//reading the file 
		fi=new FileInputStream(xlFile);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(xlSheet);
		row=sheet.getRow(rownum);
		
		//writing data into file
		cell=row.createCell(colnum);
		cell.setCellValue(data);
		System.out.println("ranjith");
		
	//saving using FOS
		fo=new FileOutputStream(xlFile);
		workbook.write(fo);
		workbook.close();
		fi.close();
		fo.close();
		
		
		
		
	}
	
	

	public  void fillGreenColor(String path,String sheetName,int rownum,int colnum) throws IOException
	{
		fi=new FileInputStream(path);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(sheetName);
		
		row=sheet.getRow(rownum);
		cell=row.getCell(colnum);
		
		style=workbook.createCellStyle();
		
		style.setFillForegroundColor(IndexedColors.GREEN.getIndex());
		style.setFillPattern(FillPatternType.SOLID_FOREGROUND); 
				
		cell.setCellStyle(style);
		fo=new FileOutputStream(path);
		workbook.write(fo);
		workbook.close();
		fi.close();
		fo.close();
	}
	
	
	public   void fillRedColor(String path,String sheetName,int rownum,int colnum) throws IOException
	{
		fi=new FileInputStream(path);
		workbook=new XSSFWorkbook(fi);
		sheet=workbook.getSheet(sheetName);
		row=sheet.getRow(rownum);
		cell=row.getCell(colnum);
		
		style=workbook.createCellStyle();
		
		style.setFillForegroundColor(IndexedColors.RED.getIndex());
		style.setFillPattern(FillPatternType.SOLID_FOREGROUND);  
		
		cell.setCellStyle(style);	
		fo=new FileOutputStream(path);
		workbook.write(fo);
		workbook.close();
		fi.close();
		fo.close();
	}

	

}
